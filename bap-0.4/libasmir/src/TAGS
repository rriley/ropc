
old_ir/stmt_c.cpp,2173
stmt_type_t stmt_type(Stmt *s) {stmt_type10,199
Exp* move_lhs(Stmt *s) {move_lhs13,257
Exp* move_rhs(Stmt *s) {move_rhs16,310
const char* label_string(Stmt *s) {label_string19,363
TraceAttrs_t* stmt_attributes(Stmt *s) {stmt_attributes22,438
threadid_t trace_tid(TraceAttrs_t *ta) {trace_tid26,509
int conc_map_size(TraceAttrs_t *ta) {conc_map_size31,599
conc_map* get_cval(TraceAttrs_t *ta, int i) {get_cval35,710
const char* cval_name(conc_map *m) {cval_name39,831
big_val_t* cval_value(conc_map *m) {cval_value42,896
long cval_value_size(big_val_t *v) {cval_value_size45,957
const_val_t cval_value_part(big_val_t *v, int i) {cval_value_part48,1016
const_val_t cval_ind(conc_map *m) {cval_ind51,1088
long cval_mem(conc_map *m) {cval_mem54,1145
cval_type_t cval_type(conc_map *m) {cval_type57,1193
int cval_usage(conc_map *m) {cval_usage60,1250
int cval_taint(conc_map *m) {cval_taint63,1301
const char* asm_string_from_stmt(Stmt*s) {asm_string_from_stmt66,1352
const char* special_string(Stmt *s) {special_string69,1427
const char* comment_string(Stmt *s) {comment_string72,1508
Exp* jmp_target(Stmt *s) {jmp_target75,1589
Exp* cjmp_cond(Stmt *s) {cjmp_cond78,1646
Exp* cjmp_ttarget(Stmt *s) {cjmp_ttarget81,1701
Exp* cjmp_ftarget(Stmt *s) {cjmp_ftarget84,1763
Exp* expstmt_exp(Stmt *s) {expstmt_exp87,1825
const char* vardecl_name(Stmt *s) {vardecl_name90,1884
reg_t vardecl_type(Stmt *s) {vardecl_type93,1960
long call_has_lval(Stmt *s) {call_has_lval96,2021
Exp* call_lval_opt(Stmt *s) {call_lval_opt99,2094
Exp * call_fnname(Stmt *s) {call_fnname102,2157
static T* vec_to_list(const vector<T> &vec)vec_to_list109,2313
Exp** call_params(Stmt *s) {call_params123,2582
long ret_has_exp(Stmt *s) {ret_has_exp127,2656
Exp* ret_exp(Stmt *s) {ret_exp131,2729
const char* func_name(Stmt *s) {func_name136,2816
long func_has_rv(Stmt *s) {func_has_rv140,2891
reg_t func_rt(Stmt *s) {func_rt144,2953
Stmt** func_params(Stmt *s) {func_params148,3008
long func_is_external(Stmt *s) {func_is_external157,3269
Stmt** func_body(Stmt *s) {func_body161,3338
Exp* assert_cond(Stmt *s)assert_cond165,3409

irtoir.cpp,5658
#define Ist_MFence Ist_MFence11,179
bool print_warnings = 1;print_warnings15,265
bool use_eflags_thunks = 0;use_eflags_thunks19,400
bool use_simple_segments = 1;use_simple_segments22,475
bool translate_calls_and_returns = 0;translate_calls_and_returns24,506
VexArch guest_arch = VexArch_INVALID;guest_arch30,732
static string uTag = "Unknown: ";uTag37,848
static string sTag = "Skipped: ";sTag38,882
Exp * count_opnd = NULL;count_opnd44,970
void asmir_set_print_warning(bool value) {asmir_set_print_warning63,1763
bool asmir_get_print_warning() {asmir_get_print_warning67,1835
void set_use_eflags_thunks(bool value){set_use_eflags_thunks77,2156
void asmir_set_use_simple_segments(bool value){asmir_set_use_simple_segments82,2285
bool get_use_eflags_thunks()get_use_eflags_thunks88,2484
void set_call_return_translation(int value)set_call_return_translation93,2546
void panic( string msg )panic102,2959
vector<VarDecl *> get_reg_decls(VexArch arch)get_reg_decls118,3318
vector<VarDecl *> get_reg_decls(void) {get_reg_decls130,3563
Exp *translate_get( IRExpr *expr, IRSB *irbb, vector<Stmt *> *irout )translate_get135,3643
Stmt *translate_put( IRStmt *stmt, IRSB *irbb, vector<Stmt *> *irout )translate_put151,4024
Exp *translate_ccall( IRExpr *expr, IRSB *irbb, vector<Stmt *> *irout )translate_ccall163,4320
void modify_flags( asm_program_t *prog, bap_block_t *block )modify_flags179,4679
reg_t IRType_to_reg_type( IRType type )IRType_to_reg_type201,5243
reg_t regt_of_irexpr(IRSB *irbb, IRExpr *e)regt_of_irexpr229,5873
Temp *mk_temp( string name, IRType ty )mk_temp234,5981
Temp *mk_temp( reg_t type, vector<Stmt *> *stmts )mk_temp241,6128
Temp *mk_temp( IRType ty, vector<Stmt *> *stmts )mk_temp250,6344
Label *mk_dest_label( Addr64 dest )mk_dest_label261,6782
Name *mk_dest_name( Addr64 dest )mk_dest_name271,7184
Exp *translate_32HLto64( Exp *arg1, Exp *arg2 )translate_32HLto64288,7786
Exp *translate_64HLto64( Exp *high, Exp *low )translate_64HLto64300,8091
Exp *translate_DivModU64to32( Exp *arg1, Exp *arg2 )translate_DivModU64to32313,8428
Exp *translate_DivModS64to32( Exp *arg1, Exp *arg2 )translate_DivModS64to32324,8721
Exp *translate_MullS8( Exp *arg1, Exp *arg2 )translate_MullS8335,9014
Exp *translate_MullU32( Exp *arg1, Exp *arg2 )translate_MullU32346,9260
Exp *translate_MullS32( Exp *arg1, Exp *arg2 )translate_MullS32357,9515
Exp *translate_Clz32( IRExpr *expr, IRSB *irbb, vector<Stmt *> *irout )translate_Clz32368,9762
Exp *translate_Ctz32( IRExpr *expr, IRSB *irbb, vector<Stmt *> *irout )translate_Ctz32398,10846
Exp *translate_CmpF64( IRExpr *expr, IRSB *irbb, vector<Stmt *> *irout )translate_CmpF64428,11930
Exp *translate_const( IRExpr *expr )translate_const472,13648
Exp *translate_simple_unop( IRExpr *expr, IRSB *irbb, vector<Stmt *> *irout )translate_simple_unop509,14993
Exp *translate_unop( IRExpr *expr, IRSB *irbb, vector<Stmt *> *irout )translate_unop579,18324
Exp *translate_simple_binop( IRExpr *expr, IRSB *irbb, vector<Stmt *> *irout )translate_simple_binop606,18930
Exp *translate_binop( IRExpr *expr, IRSB *irbb, vector<Stmt *> *irout )translate_binop716,23129
Exp *translate_triop( IRExpr *expr, IRSB *irbb, vector<Stmt *> *irout )translate_triop840,28015
Exp *emit_mux0x( vector<Stmt *> *irout, reg_t type,emit_mux0x880,29215
Exp *translate_mux0x( IRExpr *expr, IRSB *irbb, vector<Stmt *> *irout )translate_mux0x964,31259
Exp *translate_load( IRExpr *expr, IRSB *irbb, vector<Stmt *> *irout )translate_load995,32223
Exp *translate_tmp_ex( IRExpr *expr, IRSB *irbb, vector<Stmt *> *irout )translate_tmp_ex1013,32564
Exp *translate_expr( IRExpr *expr, IRSB *irbb, vector<Stmt *> *irout )translate_expr1039,33413
Stmt *translate_tmp_st( IRStmt *stmt, IRSB *irbb, vector<Stmt *> *irout )translate_tmp_st1088,34769
Stmt *translate_store( IRStmt *stmt, IRSB *irbb, vector<Stmt *> *irout )translate_store1108,35287
Stmt *translate_imark( IRStmt *stmt, IRSB *irbb )translate_imark1129,35791
Stmt *translate_exit( IRStmt *stmt, IRSB *irbb, vector<Stmt *> *irout )translate_exit1136,35919
Stmt *translate_stmt( IRStmt *stmt, IRSB *irbb, vector<Stmt *> *irout )translate_stmt1166,36896
Stmt *translate_jumpkind( IRSB *irbb, vector<Stmt *> *irout )translate_jumpkind1214,38102
bool is_special( bfd_vma inst )is_special1281,40038
vector<Stmt *> *translate_special( bfd_vma inst )translate_special1286,40091
vector<Stmt *> *translate_irbb( IRSB *irbb )translate_irbb1294,40435
VexArch vexarch_of_bfdarch(bfd_architecture arch) {vexarch_of_bfdarch1372,42401
VexArch vexarch_of_prog(asm_program_t *prog) {vexarch_of_prog1383,42629
bap_block_t* generate_vex_ir(asm_program_t *prog, address_t inst)generate_vex_ir1397,43177
vector<bap_block_t *> generate_vex_ir(asm_program_t *prog,generate_vex_ir1418,43907
vector<bap_block_t *> generate_vex_ir( asm_program_t *prog )generate_vex_ir1437,44546
void insert_specials(bap_block_t * block) {insert_specials1461,45132
void generate_bap_ir_block( asm_program_t *prog, bap_block_t *block )generate_bap_ir_block1492,45968
generate_bap_ir( asm_program_t *prog, vector<bap_block_t *> vblocks )generate_bap_ir1531,46947
string inst_to_str(asm_program_t *prog, address_t inst )inst_to_str1551,47392
string get_op_str(asm_program_t *prog, address_t inst )get_op_str1556,47507
int match_mux0x(vector<Stmt*> *ir, unsigned int i,match_mux0x1569,47821
reg_t get_exp_type_from_cast( Cast *cast )get_exp_type_from_cast1666,50239
reg_t get_exp_type( Exp *exp )get_exp_type1674,50329
do_cleanups_before_processing()do_cleanups_before_processing1698,50685

traces/reg_mapping.cpp,665
string regid_to_name(uint32_t id)regid_to_name8,138
uint32_t regid_to_full(uint32_t id)regid_to_full108,1798
static uint32_t regid_to_write_mask(uint32_t id)regid_to_write_mask167,2649
reg_t regid_to_type(uint32_t id)regid_to_type222,3498
uint32_t regid_to_read_mask(uint32_t id)regid_to_read_mask277,4264
string register_name(uint32_t id)register_name298,4591
Move* write_reg(uint32_t id, Exp *val, int offset)write_reg308,4938
Exp* read_reg(uint32_t id)read_reg393,6966
Exp* read_reg(uint32_t id, int offset)read_reg423,7634
string pin_register_name(uint32_t id)pin_register_name444,7972
cval_type_t get_type(uint32_t typ)get_type1130,26790

traces/pin_trace.cpp,856
namespace pintrace {pintrace12,171
  const bool use_toc = false;use_toc14,193
TraceReader::TraceReader(void)TraceReader16,226
TraceReader::~TraceReader()~TraceReader21,263
TraceReader::TraceReader(const char *filename)TraceReader26,297
void TraceReader::open(const char *filename)open31,367
uint32_t TraceReader::count() constcount86,1980
uint32_t TraceReader::pos() constpos91,2051
bool TraceReader::seek(uint32_t offset)seek98,2188
Frame *TraceReader::next(bool noskip)next139,3194
bool TraceReader::eof() consteof174,4162
TraceWriter::TraceWriter(const char *filename)TraceWriter180,4345
uint32_t TraceWriter::count() constcount205,4877
void TraceWriter::add(Frame &frm)add211,4973
  void TraceWriter::add(std::vector<TaintFrame> &fs) {add239,5630
void TraceWriter::finalize(uint32_t *toc, bool buildTOC)finalize250,6111

traces/trace_v50.cpp,557
Trace_v50::Trace_v50(ifstream * tracefile) : Trace(tracefile){}Trace_v504,25
void Trace_v50::read_taint_record(taint_record_t * rec)read_taint_record6,90
void Trace_v50::read_records(taint_record_t records[MAX_OPERAND_LEN], uint32_t length, uint64_t tainted)read_records22,544
void Trace_v50::read_entry_header(EntryHeader * eh)read_entry_header36,885
void Trace_v50::read_process()read_process44,1141
void Trace_v50::consume_header(TraceHeader * hdr)consume_header55,1316
void Trace_v50::read_operand(OperandVal * operand)read_operand62,1498

ocaml_helpers.c,547
asection* bfd_sections( bfd *abfd) {bfd_sections5,66
asection* bfd_next_section( asection *s) {bfd_next_section9,131
bfd* asmir_get_bfd(asm_program_t *p) {asmir_get_bfd16,267
address_t bfd_section_get_vma(asection *s) {bfd_section_get_vma20,327
bfd_size_type bfd_section_get_size(asection *s) {bfd_section_get_size24,392
const char* bfd_section_get_name(asection *s) {bfd_section_get_name28,463
int64_t bfd_section_get_flags(asection *s) {bfd_section_get_flags32,532
void asmir_free_vex_buffers(void) {asmir_free_vex_buffers36,599

asm_program.c,2211
static section_t* get_section_of(asm_program_t *prog, bfd_vma addr)get_section_of15,290
bfd_byte *asmir_get_ptr_to_instr(asm_program_t *prog, bfd_vma addr)asmir_get_ptr_to_instr29,582
asmir_open_file(const char *filename)asmir_open_file41,898
void asmir_close(asm_program_t *p)asmir_close58,1185
static int ignore() {ignore66,1309
int asmir_get_instr_length(asm_program_t *prog, bfd_vma addr)asmir_get_instr_length70,1346
my_read_memory (bfd_vma memaddr,my_read_memory83,1734
static void init_disasm_info2(bfd *abfd, struct disassemble_info *disasm_info)init_disasm_info2106,2262
static void init_disasm_info(asm_program_t *prog)init_disasm_info125,2974
static uint8_t trace_instruction_bytes[MAX_INSN_BYTES];trace_instruction_bytes134,3252
static size_t trace_instruction_size;trace_instruction_size135,3308
static bfd_vma trace_instruction_addr;trace_instruction_addr136,3346
void set_trace_bytes(void *bytes, size_t len, bfd_vma addr) {set_trace_bytes138,3386
trace_read_memory (bfd_vma memaddr,trace_read_memory145,3574
initialize_sections(asm_program_t *prog)initialize_sections163,4196
initialize_bfd(const char *filename)initialize_bfd200,5180
struct bprintf_buffer {bprintf_buffer239,6105
  char *str; // the start of the stringstr240,6129
  char *end; // the null terminator at the end of the written string.end241,6169
  size_t size; // the size of strsize242,6239
int bprintf(struct bprintf_buffer *dest, const char *fmt, ...) {bprintf245,6277
char* asmir_string_of_insn(asm_program_t *prog, bfd_vma inst)asmir_string_of_insn272,7131
enum bfd_architecture asmir_get_asmp_arch(asm_program_t *prog) {asmir_get_asmp_arch293,7696
asm_program_t* asmir_new_asmp_for_arch(enum bfd_architecture arch)asmir_new_asmp_for_arch300,7925
asm_program_t* asmir_trace_asmp_for_arch(enum bfd_architecture arch)asmir_trace_asmp_for_arch326,8696
bfd_vma asmir_get_sec_startaddr(asm_program_t *prog, const char *sectionname) {asmir_get_sec_startaddr354,9450
bfd_vma asmir_get_sec_endaddr(asm_program_t *prog, const char *sectionname) {asmir_get_sec_endaddr385,10155
asection** asmir_get_all_sections(asm_program_t *prog, long *out) {asmir_get_all_sections418,10854

traces/trace_v40.cpp,231
Trace_v40::Trace_v40(ifstream * tracefile) : Trace(tracefile) { }Trace_v404,25
void Trace_v40::read_taint_record(taint_record_t * rec)read_taint_record6,92
void Trace_v40::read_operand(OperandVal * operand)read_operand15,340

traces/trace.cpp,947
Trace::Trace(ifstream * tracefile)Trace4,80
void Trace::read_taint_byte_record(TaintByteRecord * byte_rec)read_taint_byte_record9,141
void Trace::read_taint_record(taint_record_t * rec)read_taint_record14,271
void Trace::read_records(taint_record_t records[MAX_OPERAND_LEN], uint32_t length, uint64_t tainted)read_records27,635
void Trace::read_operand(OperandVal * operand)read_operand38,923
void Trace::read_operands(OperandVal operand[MAX_NUM_OPERANDS], uint8_t num)read_operands45,1099
void Trace::read_entry_header(EntryHeader * eh)read_entry_header57,1370
void Trace::read_module()read_module67,1682
void Trace::read_process()read_process73,1787
void Trace::read_procs(TraceHeader * hdr)read_procs82,1994
void Trace::consume_header(TraceHeader * hdr)consume_header89,2135
cval_type_t Trace::opsize_to_type(int size){opsize_to_type94,2212
conc_map_vec * Trace::operand_status(EntryHeader * eh)operand_status110,2831

vexmem.c,3214
#define Ist_MFence Ist_MFence19,477
void vx_panic ( HChar* str )vx_panic71,2637
#define HUGE_BLOCK_SIZE HUGE_BLOCK_SIZE86,2964
unsigned char huge_block[ HUGE_BLOCK_SIZE ];huge_block104,3676
unsigned char *next_free = huge_block;next_free105,3721
void *vx_Alloc( Int nbytes )vx_Alloc107,3761
void vx_FreeAll()vx_FreeAll120,3961
IRCallee* vx_mkIRCallee ( Int regparms, HChar* name, void* addr )vx_mkIRCallee135,4217
IRRegArray* vx_mkIRRegArray ( Int base, IRType elemTy, Int nElems )vx_mkIRRegArray151,4582
IRExpr* vx_IRExpr_Get ( Int off, IRType ty ) {vx_IRExpr_Get166,5032
IRExpr* vx_IRExpr_GetI ( IRRegArray* descr, IRExpr* ix, Int bias ) {vx_IRExpr_GetI173,5240
IRExpr* vx_IRExpr_Tmp ( IRTemp tmp ) {vx_IRExpr_Tmp181,5502
IRExpr* vx_IRExpr_Qop ( IROp op, IRExpr* arg1, IRExpr* arg2, vx_IRExpr_Qop187,5670
IRExpr* vx_IRExpr_Triop  ( IROp op, IRExpr* arg1, vx_IRExpr_Triop198,6028
IRExpr* vx_IRExpr_Binop ( IROp op, IRExpr* arg1, IRExpr* arg2 ) {vx_IRExpr_Binop208,6365
IRExpr* vx_IRExpr_Unop ( IROp op, IRExpr* arg ) {vx_IRExpr_Unop216,6624
IRExpr* vx_IRExpr_Load ( IREndness end, IRType ty, IRExpr* addr ) {vx_IRExpr_Load223,6828
IRExpr* vx_IRExpr_Const ( IRConst* con ) {vx_IRExpr_Const232,7127
IRExpr* vx_IRExpr_CCall ( IRCallee* cee, IRType retty, IRExpr** args ) {vx_IRExpr_CCall238,7303
IRExpr* vx_IRExpr_Mux0X ( IRExpr* cond, IRExpr* expr0, IRExpr* exprX ) {vx_IRExpr_Mux0X246,7576
IRDirty* vx_emptyIRDirty ( void ) {vx_emptyIRDirty258,7884
IRStmt* vx_IRStmt_NoOp ( void )vx_IRStmt_NoOp275,8237
IRStmt* vx_IRStmt_IMark ( Addr64 addr, Int len ) {vx_IRStmt_IMark282,8410
IRStmt* vx_IRStmt_AbiHint ( IRExpr* base, Int len ) {vx_IRStmt_AbiHint289,8626
IRStmt* vx_IRStmt_Put ( Int off, IRExpr* data ) {vx_IRStmt_Put296,8855
IRStmt* vx_IRStmt_PutI ( IRRegArray* descr, IRExpr* ix,vx_IRStmt_PutI303,9068
IRStmt* vx_IRStmt_Tmp ( IRTemp tmp, IRExpr* data ) {vx_IRStmt_Tmp313,9395
IRStmt* vx_IRStmt_Store ( IREndness end, IRExpr* addr, IRExpr* data ) {vx_IRStmt_Store320,9609
IRStmt* vx_IRStmt_Dirty ( IRDirty* d )vx_IRStmt_Dirty329,9920
IRStmt* vx_IRStmt_MFence ( void )vx_IRStmt_MFence336,10104
IRStmt* vx_IRStmt_Exit ( IRExpr* guard, IRJumpKind jk, IRConst* dst ) {vx_IRStmt_Exit343,10281
IRStmt* vx_IRStmt_CAS (IRCAS* d) {vx_IRStmt_CAS351,10545
IRStmt* vx_IRStmt_LLSC ( IREndness end,vx_IRStmt_LLSC357,10710
IRSB* vx_emptyIRSB ( void )vx_emptyIRSB370,11094
IRExpr** vx_sopyIRExprVec ( IRExpr** vec )vx_sopyIRExprVec393,11779
IRExpr** vx_dopyIRExprVec ( IRExpr** vec )vx_dopyIRExprVec408,12084
IRConst* vx_dopyIRConst ( IRConst* c )vx_dopyIRConst419,12356
IRCallee* vx_dopyIRCallee ( IRCallee* ce )vx_dopyIRCallee427,12504
IRRegArray* vx_dopyIRRegArray ( IRRegArray* d )vx_dopyIRRegArray434,12668
IRExpr* vx_dopyIRExpr ( IRExpr* e )vx_dopyIRExpr439,12779
IRDirty* vx_dopyIRDirty ( IRDirty* d )vx_dopyIRDirty492,14967
IRCAS* vx_mkIRCAS ( IRTemp oldHi, IRTemp oldLo,vx_mkIRCAS510,15471
IRCAS* vx_dopyIRCAS ( IRCAS* cas )vx_dopyIRCAS527,15930
IRStmt* vx_dopyIRStmt ( IRStmt* s )vx_dopyIRStmt537,16315
IRTypeEnv* vx_dopyIRTypeEnv ( IRTypeEnv* src )vx_dopyIRTypeEnv587,18252
IRSB* vx_dopyIRSB ( IRSB* bb )vx_dopyIRSB599,18622

symbols.c,332
static void make_assertions()make_assertions11,178
remove_useless_symbols_local (asymbol *symbols, long count)remove_useless_symbols_local25,467
asymbol ** asmir_get_all_symbols(asm_program_t *prog, long *num)asmir_get_all_symbols48,1031
asymbol ** asmir_get_symbols(asm_program_t *prog, long *num)asmir_get_symbols112,2897

old_ir/stmt.cpp,2774
Stmt::clone(Stmt *s)clone14,247
void Stmt::destroy( Stmt *s )destroy19,294
VarDecl::VarDecl(string n, reg_t t, address_t asm_ad,VarDecl82,1820
VarDecl::VarDecl(const VarDecl &other) : VarDecl88,1949
VarDecl::VarDecl(Temp *t) : Stmt(VARDECL, 0x0, 0x0),VarDecl94,2086
VarDecl::tostring()tostring102,2194
VarDecl::clone() constclone109,2315
Move::tostring() tostring116,2381
Move::Move(const Move &other) Move121,2464
Move::Move(Exp *l, Exp *r, address_t asm_addr, address_t ir_addr) :  Move128,2620
Move::clone() constclone135,2753
Label::Label(const Label &other) Label140,2804
Label::Label(string l, address_t asm_addr, address_t ir_addr)  Label146,2933
Label::clone() constclone152,3056
Label::tostring()tostring158,3116
Jmp::Jmp(Exp *e, address_t asm_addr, address_t ir_addr) : Jmp165,3212
Jmp::Jmp(const Jmp &other) Jmp169,3319
Jmp::clone() constclone176,3443
string Jmp::tostring() {tostring183,3494
CJmp::CJmp(Exp *c, Exp *t, Exp *f, address_t asm_addr, address_t ir_addr) CJmp189,3588
CJmp::CJmp(const CJmp &other) CJmp194,3739
CJmp::clone() constclone203,3940
CJmp::tostring() tostring209,3999
Special::Special(string s, address_t asm_addr, address_t ir_addr) Special218,4151
Special::Special(const Special &other) Special222,4273
Special::clone() constclone229,4410
string Special::tostring() {tostring234,4467
Comment::Comment(string s, address_t asm_addr, address_t ir_addr) Comment240,4562
Comment::Comment(const Comment &other) Comment244,4684
Comment::clone() constclone252,4822
string Comment::tostring() {tostring257,4879
ExpStmt::ExpStmt(Exp *e, address_t asm_addr, address_t ir_addr) ExpStmt262,4960
ExpStmt::ExpStmt(const ExpStmt &other) ExpStmt268,5078
ExpStmt::clone() constclone275,5216
ExpStmt::tostring(){tostring281,5280
Call::Call(Exp *lval_opt, string fnname, vector<Exp*> params,Call286,5352
Call::Call(Exp *lval_opt, Exp *callee, vector<Exp *> params,Call295,5580
Call::Call(const Call &other)Call304,5793
string Call::tostring()tostring318,6196
Call* Call::clone() constclone343,6758
Return::Return(Exp *exp_opt,Return349,6816
Return::Return(const Return &other)Return356,6959
string Return::tostring()tostring362,7129
Return* Return::clone() constclone376,7316
Func::Func(string fnname, bool has_rv, reg_t rt, Func381,7379
Func::Func(const Func &other)Func395,7763
string Func::tostring()tostring412,8295
Func* Func::clone() constclone449,9013
Assert::Assert(Exp *cond, address_t asm_ad, address_t ir_ad)Assert457,9073
Assert::Assert(const Assert &other)Assert461,9183
string Assert::tostring()tostring467,9309
string int_to_str( int i )int_to_str478,9582
string int_to_hex( int i )int_to_hex488,9881
Label *mk_label()mk_label499,10238

traces/readtrace.cpp,257
trace_frames_t * read_frames_from_file(const string &filename,read_frames_from_file11,228
void destroy_trace_frames(trace_frames_t *v) {destroy_trace_frames67,1615
bap_blocks_t * read_trace_from_file(const string &filename,read_trace_from_file79,1816

vexir.c,874
static VexArchInfo         vai;vai25,587
static VexGuestExtents     vge;vge26,619
static VexTranslateArgs    vta;vta27,651
static VexTranslateResult  vtr;vtr28,683
#define TMPBUF_SIZE TMPBUF_SIZE33,814
static UChar tmpbuf[TMPBUF_SIZE];tmpbuf34,839
static Int tmpbuf_used;tmpbuf_used35,873
static IRSB *irbb_current = NULL;irbb_current40,1008
static void failure_exit( void )failure_exit49,1267
static void log_bytes( HChar* bytes, Int nbytes )log_bytes54,1316
static Bool chase_into_ok( void *closureV, Addr64 addr64 )chase_into_ok63,1554
static void *dispatch( void )dispatch68,1636
static UInt needs_self_check ( void* opaque, VexGuestExtents* vge ) {needs_self_check73,1688
IRSB *instrument1(  void *callback_opaque, instrument180,1964
void translate_init()translate_init101,2518
IRSB *translate_insn( VexArch guest,translate_insn174,5355

old_ir/exp_c.cpp,1134
exp_type_t exp_type(Exp *e) {exp_type19,471
binop_type_t binop_type(Exp *e) {binop_type22,525
Exp* binop_lhs(Exp *e) {binop_lhs25,595
Exp* binop_rhs(Exp *e) {binop_rhs28,649
unop_type_t unop_type(Exp *e) {unop_type31,703
Exp* unop_subexp(Exp *e) {unop_subexp34,769
Exp* mem_addr(Exp *e) {mem_addr37,824
reg_t mem_regtype(Exp *e) {mem_regtype40,876
const_val_t constant_val(Exp *e) {constant_val43,931
reg_t constant_regtype(Exp *e) {constant_regtype46,998
const char* phi_phiname(Exp *e) {phi_phiname49,1063
int phi_numnodes(Exp *e) {phi_numnodes52,1137
Exp* phi_nodeat(Exp *e, int i) {phi_nodeat55,1199
reg_t temp_regtype(Exp *e) {temp_regtype58,1263
const char* temp_name(Exp *e) {temp_name61,1320
const char* unknown_str(Exp *e) {unknown_str64,1389
reg_t unknown_regtype(Exp *e) {unknown_regtype67,1462
reg_t cast_width(Exp *e) {cast_width70,1525
cast_t cast_casttype(Exp *e) {cast_casttype73,1580
Exp* cast_subexp(Exp *e) {cast_subexp76,1645
const char* name_string(Exp *e) {name_string79,1700
let_var(Exp *e)let_var84,1778
let_exp(Exp *e)let_exp90,1831
let_in(Exp *e)let_in96,1884

irtoir-i386.cpp,10613
#define OFFB_EAX OFFB_EAX15,251
#define OFFB_EBX OFFB_EBX16,311
#define OFFB_ECX OFFB_ECX17,371
#define OFFB_EDX OFFB_EDX18,431
#define OFFB_ESP OFFB_ESP19,491
#define OFFB_EBP OFFB_EBP20,551
#define OFFB_ESI OFFB_ESI21,611
#define OFFB_EDI OFFB_EDI22,671
#define OFFB_EIP OFFB_EIP24,732
#define OFFB_CC_OP OFFB_CC_OP26,793
#define OFFB_CC_DEP1 OFFB_CC_DEP127,855
#define OFFB_CC_DEP2 OFFB_CC_DEP228,919
#define OFFB_CC_NDEP OFFB_CC_NDEP29,983
#define OFFB_FPREGS OFFB_FPREGS31,1048
#define OFFB_FPTAGS OFFB_FPTAGS32,1113
#define OFFB_DFLAG OFFB_DFLAG33,1178
#define OFFB_IDFLAG OFFB_IDFLAG34,1240
#define OFFB_ACFLAG OFFB_ACFLAG35,1303
#define OFFB_FTOP OFFB_FTOP36,1366
#define OFFB_FC3210 OFFB_FC321037,1427
#define OFFB_FPROUND OFFB_FPROUND38,1490
#define OFFB_CS OFFB_CS40,1555
#define OFFB_DS OFFB_DS41,1614
#define OFFB_ES OFFB_ES42,1673
#define OFFB_FS OFFB_FS43,1732
#define OFFB_GS OFFB_GS44,1791
#define OFFB_SS OFFB_SS45,1850
#define OFFB_LDT OFFB_LDT46,1909
#define OFFB_GDT OFFB_GDT47,1969
#define OFFB_SSEROUND OFFB_SSEROUND49,2030
#define OFFB_XMM0 OFFB_XMM050,2095
#define OFFB_XMM1 OFFB_XMM151,2156
#define OFFB_XMM2 OFFB_XMM252,2217
#define OFFB_XMM3 OFFB_XMM353,2278
#define OFFB_XMM4 OFFB_XMM454,2339
#define OFFB_XMM5 OFFB_XMM555,2400
#define OFFB_XMM6 OFFB_XMM656,2461
#define OFFB_XMM7 OFFB_XMM757,2522
#define OFFB_EMWARN OFFB_EMWARN59,2584
#define OFFB_TISTART OFFB_TISTART61,2648
#define OFFB_TILEN OFFB_TILEN62,2712
#define OFFB_NRADDR OFFB_NRADDR63,2774
#define OFFB_AX OFFB_AX69,2890
#define OFFB_AL OFFB_AL70,2925
#define OFFB_AH OFFB_AH71,2960
#define OFFB_BX OFFB_BX72,2997
#define OFFB_BL OFFB_BL73,3032
#define OFFB_BH OFFB_BH74,3067
#define OFFB_CX OFFB_CX75,3104
#define OFFB_CL OFFB_CL76,3139
#define OFFB_CH OFFB_CH77,3174
#define OFFB_DX OFFB_DX78,3211
#define OFFB_DL OFFB_DL79,3246
#define OFFB_DH OFFB_DH80,3281
#define OFFB_DI OFFB_DI81,3318
#define OFFB_SI OFFB_SI82,3353
#define OFFB_BP OFFB_BP83,3388
#define OFFB_SP OFFB_SP84,3423
#define OFFB_CC_DEP1_0 OFFB_CC_DEP1_089,3498
#define CF_MASK CF_MASK94,3561
#define PF_MASK PF_MASK95,3581
#define AF_MASK AF_MASK96,3606
#define ZF_MASK ZF_MASK97,3631
#define SF_MASK SF_MASK98,3656
#define OF_MASK OF_MASK99,3681
#define CF_POS CF_POS104,3734
#define PF_POS PF_POS105,3752
#define AF_POS AF_POS106,3770
#define ZF_POS ZF_POS107,3788
#define SF_POS SF_POS108,3806
#define OF_POS OF_POS109,3824
      X86CondO      = 0,  /* overflow           */X86CondO119,4054
      X86CondNO     = 1,  /* no overflow        */X86CondNO120,4105
      X86CondB      = 2,  /* below              */X86CondB122,4157
      X86CondNB     = 3,  /* not below          */X86CondNB123,4208
      X86CondZ      = 4,  /* zero               */X86CondZ125,4260
      X86CondNZ     = 5,  /* not zero           */X86CondNZ126,4311
      X86CondBE     = 6,  /* below or equal     */X86CondBE128,4363
      X86CondNBE    = 7,  /* not below or equal */X86CondNBE129,4414
      X86CondS      = 8,  /* negative           */X86CondS131,4466
      X86CondNS     = 9,  /* not negative       */X86CondNS132,4517
      X86CondP      = 10, /* parity even        */X86CondP134,4569
      X86CondNP     = 11, /* not parity even    */X86CondNP135,4620
      X86CondL      = 12, /* jump less          */X86CondL137,4672
      X86CondNL     = 13, /* not less           */X86CondNL138,4723
      X86CondLE     = 14, /* less or equal      */X86CondLE140,4775
      X86CondNLE    = 15, /* not less or equal  */X86CondNLE141,4826
      X86CondAlways = 16  /* HACK */X86CondAlways143,4878
   X86Condcode;X86Condcode145,4920
    X86G_CC_OP_COPY=0,  /* DEP1 = current flags, DEP2 = 0, NDEP = unused */X86G_CC_OP_COPY152,4994
    X86G_CC_OP_ADDB,    /* 1 */X86G_CC_OP_ADDB155,5126
    X86G_CC_OP_ADDW,    /* 2 DEP1 = argL, DEP2 = argR, NDEP = unused */X86G_CC_OP_ADDW156,5158
    X86G_CC_OP_ADDL,    /* 3 */X86G_CC_OP_ADDL157,5230
    X86G_CC_OP_SUBB,    /* 4 */X86G_CC_OP_SUBB159,5263
    X86G_CC_OP_SUBW,    /* 5 DEP1 = argL, DEP2 = argR, NDEP = unused */X86G_CC_OP_SUBW160,5295
    X86G_CC_OP_SUBL,    /* 6 */X86G_CC_OP_SUBL161,5367
    X86G_CC_OP_ADCB,    /* 7 */X86G_CC_OP_ADCB163,5400
    X86G_CC_OP_ADCW,    /* 8 DEP1 = argL, DEP2 = argR ^ oldCarry, NDEP = oldCarry */X86G_CC_OP_ADCW164,5432
    X86G_CC_OP_ADCL,    /* 9 */X86G_CC_OP_ADCL165,5517
    X86G_CC_OP_SBBB,    /* 10 */X86G_CC_OP_SBBB167,5550
    X86G_CC_OP_SBBW,    /* 11 DEP1 = argL, DEP2 = argR ^ oldCarry, NDEP = oldCarry */X86G_CC_OP_SBBW168,5583
    X86G_CC_OP_SBBL,    /* 12 */X86G_CC_OP_SBBL169,5669
    X86G_CC_OP_LOGICB,  /* 13 */X86G_CC_OP_LOGICB171,5703
    X86G_CC_OP_LOGICW,  /* 14 DEP1 = result, DEP2 = 0, NDEP = unused */X86G_CC_OP_LOGICW172,5736
    X86G_CC_OP_LOGICL,  /* 15 */X86G_CC_OP_LOGICL173,5808
    X86G_CC_OP_INCB,    /* 16 */X86G_CC_OP_INCB175,5842
    X86G_CC_OP_INCW,    /* 17 DEP1 = result, DEP2 = 0, NDEP = oldCarry (0 or 1) */X86G_CC_OP_INCW176,5875
    X86G_CC_OP_INCL,    /* 18 */X86G_CC_OP_INCL177,5958
    X86G_CC_OP_DECB,    /* 19 */X86G_CC_OP_DECB179,5992
    X86G_CC_OP_DECW,    /* 20 DEP1 = result, DEP2 = 0, NDEP = oldCarry (0 or 1) */X86G_CC_OP_DECW180,6025
    X86G_CC_OP_DECL,    /* 21 */X86G_CC_OP_DECL181,6108
    X86G_CC_OP_SHLB,    /* 22 DEP1 = res, DEP2 = res', NDEP = unused */X86G_CC_OP_SHLB183,6142
    X86G_CC_OP_SHLW,    /* 23 where res' is like res but shifted one bit less */X86G_CC_OP_SHLW184,6214
    X86G_CC_OP_SHLL,    /* 24 */X86G_CC_OP_SHLL185,6295
    X86G_CC_OP_SHRB,    /* 25 DEP1 = res, DEP2 = res', NDEP = unused */X86G_CC_OP_SHRB187,6329
    X86G_CC_OP_SHRW,    /* 26 where res' is like res but shifted one bit less */X86G_CC_OP_SHRW188,6401
    X86G_CC_OP_SHRL,    /* 27 */X86G_CC_OP_SHRL189,6482
    X86G_CC_OP_ROLB,    /* 28 */X86G_CC_OP_ROLB191,6516
    X86G_CC_OP_ROLW,    /* 29 DEP1 = res, DEP2 = 0, NDEP = old flags */X86G_CC_OP_ROLW192,6549
    X86G_CC_OP_ROLL,    /* 30 */X86G_CC_OP_ROLL193,6621
    X86G_CC_OP_RORB,    /* 31 */X86G_CC_OP_RORB195,6655
    X86G_CC_OP_RORW,    /* 32 DEP1 = res, DEP2 = 0, NDEP = old flags */X86G_CC_OP_RORW196,6688
    X86G_CC_OP_RORL,    /* 33 */X86G_CC_OP_RORL197,6760
    X86G_CC_OP_UMULB,   /* 34 */X86G_CC_OP_UMULB199,6794
    X86G_CC_OP_UMULW,   /* 35 DEP1 = argL, DEP2 = argR, NDEP = unused */X86G_CC_OP_UMULW200,6827
    X86G_CC_OP_UMULL,   /* 36 */X86G_CC_OP_UMULL201,6900
    X86G_CC_OP_SMULB,   /* 37 */X86G_CC_OP_SMULB203,6934
    X86G_CC_OP_SMULW,   /* 38 DEP1 = argL, DEP2 = argR, NDEP = unused */X86G_CC_OP_SMULW204,6967
    X86G_CC_OP_SMULL,   /* 39 */X86G_CC_OP_SMULL205,7040
    X86G_CC_OP_NUMBERX86G_CC_OP_NUMBER207,7074
static string uTag = "Unknown: ";uTag234,8256
static string sTag = "Skipped: ";sTag235,8290
vector<VarDecl *> i386_get_reg_decls()i386_get_reg_decls250,8526
static string reg_offset_to_name( int offset )reg_offset_to_name339,11750
static inline Temp *mk_reg( string name, reg_t width )mk_reg399,13977
static Exp *translate_get_reg_8( int offset )translate_get_reg_8413,14267
static Exp *translate_get_segreg_base( int offset )translate_get_segreg_base449,15327
static Exp *translate_get_reg_16( int offset )translate_get_reg_16510,16640
static Exp *translate_get_reg_32( int offset )translate_get_reg_32561,18040
Exp *i386_translate_get( IRExpr *expr, IRSB *irbb, vector<Stmt *> *irout )i386_translate_get570,18203
Exp *i386_translate_ccall( IRExpr *expr, IRSB *irbb, vector<Stmt *> *irout )i386_translate_ccall620,19104
static Stmt *translate_put_reg_8( int offset, Exp *data, IRSB *irbb )translate_put_reg_81034,33254
static Stmt *translate_put_reg_16( int offset, Exp *data, IRSB *irbb )translate_put_reg_161089,34950
static Stmt *translate_put_reg_32( int offset, Exp *data, IRSB *irbb )translate_put_reg_321152,36720
Stmt *i386_translate_put( IRStmt *stmt, IRSB *irbb, vector<Stmt *> *irout )i386_translate_put1161,36918
void del_get_thunk( asm_program_t *prog, bap_block_t *block )del_get_thunk1349,40869
void get_thunk_index(vector<Stmt *> *ir,get_thunk_index1394,42074
void set_eflags_bits( vector<Stmt *> *irout, Exp *CF, Exp *PF, Exp *AF, Exp *ZF, Exp *SF, Exp *OF )set_eflags_bits1432,42960
void get_eflags_bits(vector<Stmt *> *irout)get_eflags_bits1469,44999
void set_flag( vector<Stmt *> *irout, reg_t type, Temp *flag, Exp *cond )set_flag1515,46292
#define CALC_COND_PF(CALC_COND_PF1552,47525
Exp* mask_overflow(Exp *e, reg_t to) {mask_overflow1565,48009
vector<Stmt *> mod_eflags_copy( reg_t type, Exp *arg1, Exp *arg2 )mod_eflags_copy1587,48376
vector<Stmt *> mod_eflags_add( reg_t type, Exp *arg1, Exp *arg2 )mod_eflags_add1614,49386
vector<Stmt *> mod_eflags_sub( reg_t type, Exp *arg1, Exp *arg2 )mod_eflags_sub1685,52049
vector<Stmt *> mod_eflags_adc( reg_t type, Exp *arg1, Exp *arg2, Exp *arg3 )mod_eflags_adc1742,53969
vector<Stmt *> mod_eflags_sbb( reg_t type, Exp *arg1, Exp *arg2, Exp *arg3 )mod_eflags_sbb1833,56860
vector<Stmt *> mod_eflags_logic( reg_t type, Exp *arg1, Exp *arg2 )mod_eflags_logic1918,59641
vector<Stmt *> mod_eflags_inc( reg_t type, Exp *arg1, Exp *arg2, Exp *arg3 )mod_eflags_inc1968,61141
vector<Stmt *> mod_eflags_dec( reg_t type, Exp *arg1, Exp *arg2, Exp *arg3 )mod_eflags_dec2044,63318
vector<Stmt *> mod_eflags_shl( reg_t type, Exp *arg1, Exp *arg2 )mod_eflags_shl2106,65373
vector<Stmt *> mod_eflags_shr( reg_t type, Exp *arg1, Exp *arg2 )mod_eflags_shr2175,67571
vector<Stmt *> mod_eflags_rol( reg_t type, Exp *arg1, Exp *arg2, Exp *arg3 )mod_eflags_rol2253,70120
vector<Stmt *> mod_eflags_ror( reg_t type, Exp *arg1, Exp *arg2, Exp *arg3 )mod_eflags_ror2311,72210
vector<Stmt *> mod_eflags_umul( reg_t type, Exp *arg1, Exp *arg2 )mod_eflags_umul2364,74261
vector<Stmt *> mod_eflags_smul( reg_t type, Exp *arg1, Exp *arg2 )mod_eflags_smul2442,76634
int del_put_thunk(vector<Stmt*> *ir,del_put_thunk2522,79147
typedef vector<Stmt *> Mod_Func_0 (void);Mod_Func_02619,81979
typedef vector<Stmt *> Mod_Func_2 (reg_t, Exp *, Exp *);Mod_Func_22620,82021
typedef vector<Stmt *> Mod_Func_3 (reg_t, Exp *, Exp *, Exp *);Mod_Func_32621,82078
static void modify_eflags_helper( string op, reg_t type, vector<Stmt *> *ir, int argnum, Mod_Func_0 *mod_eflags_func )modify_eflags_helper2623,82143
bool i386_op_is_very_broken(string op_string) {i386_op_is_very_broken2698,84764
void i386_modify_flags( asm_program_t *prog, bap_block_t *block )i386_modify_flags2708,84943

old_ir/exp.cpp,7101
static string binopnames[] = {binopnames16,329
static string strs[] = {strs41,609
Exp::cast_value(reg_t t, uint64_t v)cast_value68,821
Exp::reg_to_bits(const reg_t &reg)reg_to_bits86,1322
Exp::clone(Exp* copy)clone101,1602
void Exp::destroy( Exp *expr )destroy107,1654
Exp::string_type(const reg_t &typ)string_type129,2593
BinOp::BinOp(binop_type_t t, Exp *l, Exp *r) BinOp145,2921
BinOp::BinOp(const BinOp& copy)BinOp151,3020
BinOp::clone() constclone159,3163
BinOp::tostring() consttostring165,3223
BinOp::optype_to_string(const binop_type_t binop_type)optype_to_string174,3375
BinOp::optype_to_name(const binop_type_t binop_type)optype_to_name180,3469
BinOp::string_to_optype(const string s)string_to_optype186,3573
void BinOp::destroy( BinOp *expr )destroy196,3765
UnOp::UnOp(const UnOp& copy)UnOp206,3900
UnOp::UnOp(unop_type_t typ, Exp *e)  UnOp212,4002
UnOp::clone() constclone218,4091
UnOp::tostring() consttostring225,4150
UnOp::optype_to_string(const unop_type_t op)optype_to_string241,4385
UnOp::string_to_optype(const string s)string_to_optype255,4626
void UnOp::destroy( UnOp *expr )destroy263,4760
Mem::Mem(Exp *a, reg_t t)Mem280,4937
Mem::Mem(const Mem& copy)Mem286,4999
Mem::clone() constclone294,5096
Mem::tostring() consttostring300,5152
void Mem::destroy( Mem *expr )destroy307,5294
Constant::Constant(reg_t t, const_val_t v)Constant316,5401
Constant::Constant(const Constant& other)Constant323,5485
Constant::clone() constclone330,5593
Constant::tostring() consttostring336,5659
void Constant::destroy( Constant *expr )destroy355,6142
Constant Constant::t = Constant(REG_1,t362,6224
Constant Constant::f = Constant(REG_1,f364,6284
Phi::Phi(const Phi& copy)Phi372,6512
Phi::Phi(string orig_name, vector<Temp*> v)Phi383,6742
Phi::clone() constclone389,6841
Phi::tostring() consttostring395,6897
void Phi::destroy( Phi *expr )destroy409,7158
Temp::Temp(reg_t t, string n) Temp423,7350
Temp::Temp(const Temp &other)Temp428,7418
Temp::clone() constclone435,7509
Temp::tostring() consttostring441,7568
void Temp::destroy( Temp *expr )destroy451,7763
Unknown::Unknown(string s, reg_t t) : Exp(UNKNOWN), str(s), typ(t)Unknown458,7837
Unknown::Unknown(const Unknown &other)Unknown461,7909
Unknown::clone() constclone466,8012
void Unknown::destroy( Unknown *expr )destroy471,8069
Name::Name( string s ) : Exp(NAME), name(s)Name478,8149
Name::Name( const Name &other ) : Exp(NAME), name(other.name)Name483,8224
Name::clone() constclone489,8324
string Name::tostring() consttostring494,8375
void Name::destroy( Name *expr )destroy500,8478
Cast::Cast( Exp *e, reg_t w, cast_t t ) Cast507,8552
Cast::Cast( const Cast &other ) Cast511,8642
Cast::clone() constclone518,8773
void Cast::destroy( Cast *expr )destroy523,8824
string Cast::tostring() consttostring532,8928
string Cast::cast_type_to_string( const cast_t ctype )cast_type_to_string556,9562
Let::Let(Exp *v, Exp *e, Exp *i) : Exp(LET), var(v), exp(e), in(i)Let581,10406
Let *Let::clone() constclone586,10492
Let::Let(const Let &other) : Exp(LET)Let593,10548
Let::destroy(Exp *exp)destroy601,10678
Let::tostring() consttostring612,10861
Exp *ecl( Exp *exp )ecl628,11333
Constant *ex_const(uint32_t value )ex_const634,11401
Constant *ex_const(reg_t t, const_val_t value )ex_const640,11481
Name *ex_name( string name )ex_name646,11570
UnOp *_ex_not( Exp *arg )_ex_not651,11631
UnOp *ex_not( Exp *arg )ex_not656,11693
BinOp *_ex_add( Exp *arg1, Exp *arg2 )_ex_add662,11770
BinOp *ex_add( Exp *arg1, Exp *arg2 )ex_add667,11854
BinOp *_ex_sub( Exp *arg1, Exp *arg2 )_ex_sub674,11977
BinOp *ex_sub( Exp *arg1, Exp *arg2 )ex_sub679,12062
BinOp *_ex_mul( Exp *arg1, Exp *arg2 )_ex_mul686,12185
BinOp *ex_mul( Exp *arg1, Exp *arg2 )ex_mul691,12270
BinOp *_ex_div( Exp *arg1, Exp *arg2 )_ex_div698,12393
BinOp *ex_div( Exp *arg1, Exp *arg2 )ex_div703,12479
BinOp *_ex_and( Exp *arg1, Exp *arg2 )_ex_and710,12600
BinOp *_ex_and( Exp *arg1, Exp *arg2, Exp *arg3 )_ex_and715,12686
BinOp *_ex_and( Exp *arg1, Exp *arg2, Exp *arg3, Exp *arg4, Exp *arg5, Exp *arg6, Exp *arg7 )_ex_and720,12788
BinOp *ex_and( Exp *arg1, Exp *arg2 )ex_and725,12969
BinOp *ex_and( Exp *arg1, Exp *arg2, Exp *arg3 )ex_and732,13092
BinOp *ex_and( Exp *arg1, Exp *arg2, Exp *arg3, Exp *arg4, Exp *arg5, Exp *arg6, Exp *arg7 )ex_and740,13256
BinOp *_ex_or( Exp *arg1, Exp *arg2 )_ex_or752,13584
BinOp *_ex_or( Exp *arg1, Exp *arg2, Exp *arg3 )_ex_or757,13668
BinOp *_ex_or( Exp *arg1, Exp *arg2, Exp *arg3, Exp *arg4, Exp *arg5, Exp *arg6 )_ex_or762,13767
BinOp *_ex_or( Exp *arg1, Exp *arg2, Exp *arg3, Exp *arg4, Exp *arg5, Exp *arg6, Exp *arg7 )_ex_or767,13927
BinOp *ex_or( Exp *arg1, Exp *arg2 )ex_or772,14104
BinOp *ex_or( Exp *arg1, Exp *arg2, Exp *arg3 )ex_or779,14225
BinOp *ex_or( Exp *arg1, Exp *arg2, Exp *arg3, Exp *arg4, Exp *arg5, Exp *arg6 )ex_or787,14393
BinOp *ex_or( Exp *arg1, Exp *arg2, Exp *arg3, Exp *arg4, Exp *arg5, Exp *arg6, Exp *arg7 )ex_or798,14690
BinOp *_ex_xor( Exp *arg1, Exp *arg2 )_ex_xor810,15030
BinOp *_ex_xor( Exp *arg1, Exp *arg2, Exp *arg3 )_ex_xor815,15113
BinOp *_ex_xor( Exp *arg1, Exp *arg2, Exp *arg3, Exp *arg4 )_ex_xor820,15215
BinOp *_ex_xor( Exp *arg1, Exp *arg2, Exp *arg3, Exp *arg4,_ex_xor825,15345
BinOp *ex_xor( Exp *arg1, Exp *arg2 )ex_xor831,15566
BinOp *ex_xor( Exp *arg1, Exp *arg2, Exp *arg3 )ex_xor838,15693
BinOp *_ex_shl( Exp *arg1, Exp *arg2 )_ex_shl846,15863
BinOp *ex_shl( Exp *arg1, Exp *arg2 )ex_shl851,15949
BinOp *ex_shl( Exp *arg1, int arg2 )ex_shl858,16086
BinOp *_ex_shr( Exp *arg1, Exp *arg2 )_ex_shr864,16206
BinOp *ex_shr( Exp *arg1, Exp *arg2 )ex_shr869,16292
BinOp *ex_shr( Exp *arg1, int arg2 )ex_shr876,16429
BinOp *_ex_sar( Exp *arg1, Exp *arg2 )_ex_sar882,16549
BinOp *ex_sar( Exp *arg1, Exp *arg2 )ex_sar887,16636
BinOp *ex_sar( Exp *arg1, int arg2 )ex_sar894,16774
BinOp *_ex_eq( Exp *arg1, Exp *arg2 )_ex_eq900,16895
BinOp *ex_eq( Exp *arg1, Exp *arg2 )ex_eq905,16976
BinOp *_ex_neq( Exp *arg1, Exp *arg2 )_ex_neq912,17108
BinOp *ex_neq( Exp *arg1, Exp *arg2 )ex_neq917,17191
BinOp *ex_gt( Exp *arg1, Exp *arg2 )ex_gt924,17325
BinOp *ex_lt( Exp *arg1, Exp *arg2 )ex_lt931,17457
BinOp *ex_ge( Exp *arg1, Exp *arg2 )ex_ge938,17592
BinOp *ex_le( Exp *arg1, Exp *arg2 )ex_le945,17724
Cast *ex_u_cast( Exp *arg, reg_t width )ex_u_cast952,17859
Cast *_ex_u_cast( Exp *arg, reg_t width )_ex_u_cast958,17973
Cast *ex_s_cast( Exp *arg, reg_t width )ex_s_cast963,18068
Cast *_ex_s_cast( Exp *arg, reg_t width )_ex_s_cast969,18184
Cast *ex_h_cast( Exp *arg, reg_t width )ex_h_cast974,18277
Cast *ex_l_cast( Exp *arg, reg_t width )ex_l_cast980,18391
Cast *_ex_l_cast( Exp *arg, reg_t width )_ex_l_cast986,18504
Cast *ex_i_cast( Exp *arg, reg_t width )ex_i_cast991,18594
Cast *ex_f_cast( Exp *arg, reg_t width )ex_f_cast997,18711
Cast *ex_ri_cast( Exp *arg, reg_t width )ex_ri_cast1003,18826
Cast *ex_rf_cast( Exp *arg, reg_t width )ex_rf_cast1009,18945

traces/pin_frame.cpp,1869
int pintrace::source = 1;source11,149
#define READ(READ13,176
#define WRITE(WRITE14,251
uint32_t bitsOfType(uint32_t t) {bitsOfType17,377
uint32_t bytesOfType(uint32_t t) {bytesOfType54,980
Frame *Frame::unserialize(istream &in, bool noskip)unserialize60,1090
ostream &Frame::serialize(ostream &out, uint16_t sz)serialize123,2484
void StdFrame::clearCache()clearCache137,2771
void StdFrame2::clearCache()clearCache142,2860
ostream &StdFrame::serialize(ostream &out, uint16_t sz)serialize147,2950
istream &StdFrame::unserializePart(istream &in)unserializePart187,4137
conc_map_vec * StdFrame::getOperands()getOperands218,4951
ostream &StdFrame2::serialize(ostream &out, uint16_t sz)serialize224,5019
istream &StdFrame2::unserializePart(istream &in)unserializePart271,6445
conc_map_vec * StdFrame2::getOperands()getOperands304,7326
ostream &KeyFrame::serialize(ostream &out, uint16_t sz)serialize372,9288
istream &KeyFrame::unserializePart(istream &in)unserializePart400,9777
void KeyFrame::setAll(uint32_t eax, uint32_t ebx, uint32_t ecx, uint32_t edx,setAll426,10134
ostream &LoadModuleFrame::serialize(ostream &out, uint16_t sz)serialize453,10754
istream &LoadModuleFrame::unserializePart(istream &in)unserializePart468,11025
ostream &SyscallFrame::serialize(ostream &out, uint16_t sz)serialize482,11220
istream &SyscallFrame::unserializePart(istream &in)unserializePart498,11525
conc_map_vec * SyscallFrame::getOperands()getOperands514,11756
ostream &TaintFrame::serialize(ostream &out, uint16_t sz)serialize541,12378
istream &TaintFrame::unserializePart(istream &in)unserializePart554,12581
conc_map_vec * TaintFrame::getOperands()getOperands566,12730
ostream &ExceptionFrame::serialize(ostream &out, uint16_t sz)serialize592,13297
istream &ExceptionFrame::unserializePart(istream &in)unserializePart605,13537

traces/pin_frame.h,6389
namespace pintrace { // Use namespace to avoid conflictpintrace25,589
const uint32_t MAX_BYTES_PER_PIN_REG = 32;MAX_BYTES_PER_PIN_REG31,733
const uint32_t MAX_WORDS_PER_PIN_REG = (MAX_BYTES_PER_PIN_REG/2);MAX_WORDS_PER_PIN_REG32,776
const uint32_t MAX_DWORDS_PER_PIN_REG = (MAX_WORDS_PER_PIN_REG/2);MAX_DWORDS_PER_PIN_REG33,842
const uint32_t MAX_QWORDS_PER_PIN_REG = (MAX_DWORDS_PER_PIN_REG/2);MAX_QWORDS_PER_PIN_REG34,909
const uint32_t MAX_FLOATS_PER_PIN_REG = (MAX_BYTES_PER_PIN_REG/sizeof(float));MAX_FLOATS_PER_PIN_REG35,977
const uint32_t MAX_DOUBLES_PER_PIN_REG = (MAX_BYTES_PER_PIN_REG/sizeof(double));MAX_DOUBLES_PER_PIN_REG36,1056
union PIN_REGISTERPIN_REGISTER39,1139
  uint8_t  byte[MAX_BYTES_PER_PIN_REG];byte41,1160
  uint16_t word[MAX_WORDS_PER_PIN_REG];word42,1200
  uint32_t dword[MAX_DWORDS_PER_PIN_REG];dword43,1240
  uint64_t qword[MAX_QWORDS_PER_PIN_REG];qword44,1282
  int8_t   s_byte[MAX_BYTES_PER_PIN_REG];s_byte46,1327
  int16_t  s_word[MAX_WORDS_PER_PIN_REG];s_word47,1369
  int32_t  s_dword[MAX_DWORDS_PER_PIN_REG];s_dword48,1411
  int64_t  s_qword[MAX_QWORDS_PER_PIN_REG];s_qword49,1455
  float  flt[MAX_FLOATS_PER_PIN_REG];flt51,1500
  double  dbl[MAX_DOUBLES_PER_PIN_REG];dbl52,1538
#define __NR_read	__NR_read61,1700
#define __NR_open	__NR_open62,1723
#define __NR_close	__NR_close63,1746
#define __NR_execve	__NR_execve64,1770
#define __NR_mmap	__NR_mmap65,1795
#define __NR_socketcall	__NR_socketcall66,1818
#define __NR_mmap2	__NR_mmap267,1846
#define REG_BASE REG_BASE69,1871
#define MEM_BASE MEM_BASE70,1892
#define REGTYPE_LAST REGTYPE_LAST71,1914
#define MEMTYPE_LAST MEMTYPE_LAST72,1948
#define VT_NONE VT_NONE74,2010
#define VT_REG8 VT_REG875,2034
#define VT_REG16 VT_REG1676,2069
#define VT_REG32 VT_REG3277,2104
#define VT_REG64 VT_REG6478,2139
#define VT_REG128 VT_REG12879,2174
#define VT_MEM8 VT_MEM880,2209
#define VT_MEM16 VT_MEM1681,2244
#define VT_MEM32 VT_MEM3282,2279
#define VT_MEM64 VT_MEM6483,2314
#define VT_MEM128 VT_MEM12884,2349
#define VT_MEM256 VT_MEM25685,2384
enum FrameType {FrameType87,2420
   FRM_NONE = 0,FRM_NONE90,2464
   FRM_KEY = 1,FRM_KEY93,2550
   FRM_STD = 2,FRM_STD96,2641
   FRM_LOADMOD = 3,FRM_LOADMOD99,2702
   FRM_SYSCALL = 4,FRM_SYSCALL102,2779
   FRM_TAINT = 5,FRM_TAINT105,2830
   FRM_STD2 = 6,FRM_STD2107,2849
   FRM_EXCEPT = 7,FRM_EXCEPT110,2889
   struct Frame {Frame121,3034
      FrameType type;type123,3053
      Frame(FrameType ty) : type(ty) {}Frame125,3076
   struct StdFrame : public Frame {StdFrame227,7866
      uint32_t addr;addr229,7903
      uint32_t tid;tid230,7924
      uint8_t insn_length;         // Must be <= MAX_INSN_BYTESinsn_length231,7944
      uint8_t values_count;          // Must be <= MAX_VALUES_COUNTvalues_count232,8008
      char rawbytes[MAX_INSN_BYTES];rawbytes233,8076
      char cachemask[MAX_CACHEMASK_BTYES];cachemask234,8113
      uint32_t values[MAX_VALUES_COUNT];values235,8156
      uint32_t types[MAX_VALUES_COUNT];types236,8197
      uint32_t usages[MAX_VALUES_COUNT];usages237,8237
      uint32_t locs[MAX_VALUES_COUNT];locs238,8278
      uint32_t taint[MAX_VALUES_COUNT];taint239,8317
      StdFrame() : Frame(FRM_STD) {}StdFrame241,8358
      bool isCached(uint32_t pos)isCached255,8804
      void setCached(uint32_t pos)setCached263,8991
      void unsetCached(uint32_t pos)unsetCached269,9133
   struct StdFrame2 : public Frame {StdFrame2362,13573
      uint32_t addr;addr364,13611
      uint32_t tid;tid365,13632
      uint8_t insn_length;         // Must be <= MAX_INSN_BYTESinsn_length366,13652
      uint8_t values_count;          // Must be <= MAX_VALUES_COUNTvalues_count367,13716
      char rawbytes[MAX_INSN_BYTES];rawbytes368,13784
      char cachemask[MAX_CACHEMASK_BTYES];cachemask369,13821
      PIN_REGISTER values[MAX_VALUES_COUNT];values370,13864
      uint32_t types[MAX_VALUES_COUNT];types371,13909
      uint32_t usages[MAX_VALUES_COUNT];usages372,13949
      uint32_t locs[MAX_VALUES_COUNT];locs373,13990
      uint32_t taint[MAX_VALUES_COUNT];taint374,14029
      StdFrame2() : Frame(FRM_STD2) {}StdFrame2376,14070
      bool isCached(uint32_t pos)isCached390,14518
      void setCached(uint32_t pos)setCached398,14705
      void unsetCached(uint32_t pos)unsetCached404,14847
   struct KeyFrame : public Frame {KeyFrame439,16275
      uint64_t pos;pos441,16312
      uint32_t eax;eax443,16333
      uint32_t ebx;ebx444,16353
      uint32_t ecx;ecx445,16373
      uint32_t edx;edx446,16393
      uint32_t esi;esi447,16413
      uint32_t edi;edi448,16433
      uint32_t esp;esp449,16453
      uint32_t ebp;ebp450,16473
      uint32_t eflags;eflags451,16493
      uint16_t cs;cs453,16517
      uint16_t ds;ds454,16536
      uint16_t ss;ss455,16555
      uint16_t es;es456,16574
      uint16_t fs;fs457,16593
      uint16_t gs;gs458,16612
      KeyFrame() : Frame(FRM_KEY) {}KeyFrame462,16669
   struct LoadModuleFrame : public Frame {LoadModuleFrame483,17305
      uint32_t low_addr;low_addr485,17349
      uint32_t high_addr;high_addr486,17374
      uint32_t start_addr;start_addr487,17400
      uint32_t load_offset;load_offset488,17427
      char name[64];name489,17455
      LoadModuleFrame() : Frame(FRM_LOADMOD) {}LoadModuleFrame491,17483
   struct SyscallFrame : public Frame {SyscallFrame506,17807
      uint32_t addr;addr508,17848
      uint32_t tid;tid509,17869
      uint32_t callno;callno510,17889
      uint32_t args[MAX_SYSCALL_ARGS];args511,17912
      SyscallFrame() : Frame(FRM_SYSCALL) {}SyscallFrame513,17958
   struct TaintFrame : public Frame {TaintFrame523,18282
      uint32_t id;id525,18321
      uint32_t length;length526,18340
      uint32_t addr;addr527,18363
      TaintFrame() : Frame(FRM_TAINT) {}TaintFrame529,18391
   struct ExceptionFrame : public Frame {ExceptionFrame547,18853
       uint32_t exception;exception549,18896
       uint32_t tid;tid550,18923
       uint32_t from_addr;from_addr552,18979
       uint32_t to_addr;to_addr553,19006
      ExceptionFrame() : Frame(FRM_EXCEPT) {}ExceptionFrame555,19032
typedef pintrace::Frame trace_frame_t;trace_frame_t563,19248
typedef std::vector<trace_frame_t*> trace_frames_t;trace_frames_t564,19287

irtoir_c.cpp,2448
int asmir_bap_blocks_size(bap_blocks_t *bs) {asmir_bap_blocks_size58,1433
bap_block_t * asmir_bap_blocks_get(bap_blocks_t *bs, int i) {asmir_bap_blocks_get66,1547
void destroy_bap_block(bap_block_t *b) {destroy_bap_block70,1632
void destroy_bap_blocks(bap_blocks_t *bs) {destroy_bap_blocks90,2186
long asmir_bap_blocks_error(bap_blocks_t *bs) {asmir_bap_blocks_error99,2490
long asmir_bap_block_error(bap_block_t *b) {asmir_bap_block_error110,2646
address_t asmir_bap_block_address(bap_block_t *b)asmir_bap_block_address114,2746
int asmir_bap_block_size(bap_block_t *b) {asmir_bap_block_size119,2819
Stmt * asmir_bap_block_get(bap_block_t *b, int i) {asmir_bap_block_get127,2942
const char* asm_string_from_block(bap_block_t *b) {asm_string_from_block131,3024
byte_insn_to_asmp(bfd_architecture arch, address_t addr, unsigned char *bb_bytes, unsigned int len)byte_insn_to_asmp141,3266
bap_block_t* asmir_addr_to_bap(asm_program_t *p, address_t addr, address_t *next)asmir_addr_to_bap170,4099
bap_blocks_t * asmir_bap_from_trace_file(char * filename, asmir_bap_from_trace_file190,4629
trace_frames_t * asmir_frames_from_trace_file(char *filename,asmir_frames_from_trace_file205,5068
void asmir_frames_destroy(trace_frames_t *tfs) {asmir_frames_destroy213,5391
int asmir_frames_length(trace_frames_t *tfs) {asmir_frames_length218,5485
trace_frame_t * asmir_frames_get(trace_frames_t *tfs, int index) {asmir_frames_get224,5588
pintrace::FrameType asmir_frame_type(trace_frame_t *tf) {asmir_frame_type230,5698
int asmir_frame_tid(trace_frame_t *tf) {asmir_frame_tid236,5793
uint8_t * asmir_frame_get_insn_bytes(trace_frame_t *tf, uint64_t *addrout, int *len) {asmir_frame_get_insn_bytes248,6022
const char* asmir_frame_get_loadmod_info(trace_frame_t *tf, uint64_t *lowout, uint64_t *highout) {asmir_frame_get_loadmod_info271,6643
void asmir_frame_get_syscall_info(trace_frame_t *tf, int *callno,asmir_frame_get_syscall_info282,6961
void asmir_frame_get_except_info(trace_frame_t *tf, int *exceptno,asmir_frame_get_except_info294,7295
conc_map_vec * asmir_frame_get_operands(trace_frame_t *tf) {asmir_frame_get_operands309,7727
void asmir_frame_destroy_operands(conc_map_vec *cv) {asmir_frame_destroy_operands340,8441
int asmir_frame_operands_length(conc_map_vec *cv) {asmir_frame_operands_length351,8625
ConcPair* asmir_frame_get_operand(conc_map_vec *cv, int num) {asmir_frame_get_operand359,8744

memory_data.cpp,671
typedef struct memory_cell_data {memory_cell_data14,240
address_t address;address15,274
int value; // suppose to have 256 possible byte valuesvalue16,293
} memory_cell_data_t;memory_cell_data_t17,348
extern void destroy_memory_data(memory_data_t *md) {destroy_memory_data20,372
address_t memory_cell_data_address(memory_cell_data_t *md) {memory_cell_data_address30,603
int memory_cell_data_value(memory_cell_data_t *md) {memory_cell_data_value34,691
int memory_data_size(memory_data_t *md) {memory_data_size38,769
memory_cell_data_t * memory_data_get(memory_data_t *md, int i) {memory_data_get42,837
get_rodata(asm_program_t *prog) {get_rodata52,1096

traces/pin_trace.h,1226
#define TRACE_MAGIC TRACE_MAGIC12,127
#define TRACE_VERSION TRACE_VERSION14,159
#define TRACE_ICACHE_SIZE TRACE_ICACHE_SIZE16,184
#define TRACE_ICACHE_MASK TRACE_ICACHE_MASK17,215
namespace pintrace { // We will use namespace to avoid collisionpintrace44,1292
  typedef std::map<uint64_t, uint64_t> toc_map;toc_map46,1358
   class TraceExn {TraceExn48,1409
      const std::string msg;msg50,1440
      TraceExn(const std::string &m) : msg(m) {}TraceExn51,1469
   struct TraceHeader {TraceHeader57,1585
      uint32_t magic;magic58,1609
      uint32_t version;version59,1631
      uint64_t frame_count;frame_count60,1655
      uint64_t toc_offset;toc_offset61,1683
   class TraceReader {TraceReader67,1783
     uint64_t frm_pos;frm_pos71,1820
     std::auto_ptr<toc_map> toc;toc73,1892
      std::ifstream infile;infile76,1945
      TraceHeader header;header77,1973
      char icache[TRACE_ICACHE_SIZE][MAX_INSN_BYTES + 1];     icache79,2059
   class TraceWriter {TraceWriter113,2997
      uint64_t frm_count;frm_count117,3040
      std::ofstream outfile;outfile121,3088
      char icache[TRACE_ICACHE_SIZE][MAX_INSN_BYTES];icache123,3118
      uint32_t offset()offset153,4350

irtoir-arm.cpp,1488
#define OFFB_R0 OFFB_R015,363
#define OFFB_R1 OFFB_R116,421
#define OFFB_R2 OFFB_R217,479
#define OFFB_R3 OFFB_R318,537
#define OFFB_R4 OFFB_R419,595
#define OFFB_R5 OFFB_R520,653
#define OFFB_R6 OFFB_R621,711
#define OFFB_R7 OFFB_R722,769
#define OFFB_R8 OFFB_R823,827
#define OFFB_R9 OFFB_R924,885
#define OFFB_R10 OFFB_R1025,943
#define OFFB_R11 OFFB_R1126,1002
#define OFFB_R12 OFFB_R1227,1061
#define OFFB_R13 OFFB_R1328,1120
#define OFFB_R14 OFFB_R1429,1179
#define OFFB_R15T OFFB_R15T30,1238
#define OFFB_CC_OP OFFB_CC_OP36,1502
#define OFFB_CC_DEP1 OFFB_CC_DEP137,1563
#define OFFB_CC_DEP2 OFFB_CC_DEP238,1626
#define OFFB_CC_NDEP OFFB_CC_NDEP39,1689
vector<VarDecl *> arm_get_reg_decls()arm_get_reg_decls41,1753
static string reg_offset_to_name( int offset )reg_offset_to_name74,2977
static inline Temp *mk_reg( string name, reg_t width )mk_reg109,4030
static Exp *translate_get_reg_32( int offset )translate_get_reg_32115,4126
Exp  *arm_translate_get( IRExpr *expr, IRSB *irbb, vector<Stmt *> *irout )arm_translate_get125,4290
static Stmt *translate_put_reg_32( int offset, Exp *data, IRSB *irbb )translate_put_reg_32135,4503
Stmt *arm_translate_put( IRStmt *stmt, IRSB *irbb, vector<Stmt *> *irout )arm_translate_put145,4702
Exp  *arm_translate_ccall( IRExpr *expr, IRSB *irbb, vector<Stmt *> *irout )arm_translate_ccall157,5005
void  arm_modify_flags( asm_program_t *prog, bap_block_t *block )arm_modify_flags165,5208

traces/trace_v41.cpp,81
Trace_v41::Trace_v41(ifstream * tracefile) : Trace(tracefile) { }Trace_v413,24
